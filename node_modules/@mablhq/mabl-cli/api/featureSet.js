"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeatureSet = exports.FindImplementationVersion = exports.AI_ASSERTIONS_FEATURE_FLAG = exports.ADVANCED_AUTO_HEALING_FEATURE_FLAG = exports.GENERATIVE_AI_FEATURE_FLAG = void 0;
const browserLauncher_1 = require("../browserLauncher");
const ACCESSIBILITY_CHECK_FEATURE_FLAG = 'accessibility_checks';
const PERFORMANCE_TESTING_FEATURE_FLAG = 'performance_testing';
const SMARTER_WAIT_FEATURE_FLAG = 'smarter_wait';
exports.GENERATIVE_AI_FEATURE_FLAG = 'generative_ai';
exports.ADVANCED_AUTO_HEALING_FEATURE_FLAG = 'advanced_auto_healing';
exports.AI_ASSERTIONS_FEATURE_FLAG = 'ai_assertion_steps';
var FindImplementationVersion;
(function (FindImplementationVersion) {
    FindImplementationVersion[FindImplementationVersion["V1"] = 0] = "V1";
    FindImplementationVersion[FindImplementationVersion["SmartFind"] = 1] = "SmartFind";
})(FindImplementationVersion || (exports.FindImplementationVersion = FindImplementationVersion = {}));
class FeatureSet {
    constructor(featureFlags) {
        this.featureFlags = featureFlags;
    }
    getRunnerType() {
        return browserLauncher_1.RunnerType.Playwright;
    }
    getFindImplementationVersion() {
        return this.featureFlags.has(SMARTER_WAIT_FEATURE_FLAG)
            ? FindImplementationVersion.SmartFind
            : FindImplementationVersion.V1;
    }
    hasAccessibilityChecksEnabled() {
        return this.featureFlags.has(ACCESSIBILITY_CHECK_FEATURE_FLAG);
    }
    hasPerformanceTestingFeatureEnabled() {
        return this.featureFlags.has(PERFORMANCE_TESTING_FEATURE_FLAG);
    }
    hasAiAssertions() {
        return this.featureFlags.has(exports.AI_ASSERTIONS_FEATURE_FLAG);
    }
    allowGenerativeAi() {
        return this.featureFlags.has(exports.GENERATIVE_AI_FEATURE_FLAG);
    }
    useAdvancedAutoHeal() {
        return this.featureFlags.has(exports.ADVANCED_AUTO_HEALING_FEATURE_FLAG);
    }
}
exports.FeatureSet = FeatureSet;
