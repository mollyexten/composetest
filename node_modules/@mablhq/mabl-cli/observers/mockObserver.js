"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FakeBrowserObserver = exports.noopPageLifecycleCallback = exports.noopObserveAfterFunction = exports.noopObserveDeferredFunction = void 0;
const noopObserveDeferredFunction = () => Promise.resolve();
exports.noopObserveDeferredFunction = noopObserveDeferredFunction;
const noopObserveAfterFunction = () => Promise.resolve();
exports.noopObserveAfterFunction = noopObserveAfterFunction;
exports.noopPageLifecycleCallback = {
    onPageCreated: () => { },
    onPageDestroyed: () => { },
};
class FakeBrowserObserver {
    constructor() {
        this.observationType = 'test';
        this._hitCount = 0;
        this._sendObservationMessageHitCount = 0;
    }
    get sendObservationMessageHitCount() {
        return this._sendObservationMessageHitCount;
    }
    get hitCount() {
        return this._hitCount;
    }
    observeDeferred() {
        this._hitCount += 1;
        return Promise.resolve();
    }
    observeAfter() {
        return Promise.resolve();
    }
    observeFlow() {
        return Promise.resolve();
    }
    observeTest() {
        return Promise.resolve();
    }
    onPageCreated(_page, _pageId) {
        return Promise.resolve();
    }
    onPageDestroyed(_page, _pageId) {
        return Promise.resolve();
    }
    sendObservationMessage() {
        this._sendObservationMessageHitCount += 1;
    }
}
exports.FakeBrowserObserver = FakeBrowserObserver;
