"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WaitStep = void 0;
const MablStep_1 = require("../MablStep");
class WaitStep extends MablStep_1.MablStep {
    constructor(name, args, actions) {
        super(name, args, actions, 'wait');
        this.milliseconds = WaitStep.validateWait(this.getActionArgs()[0]);
    }
    getStepName() {
        return WaitStep.stepName;
    }
    toStepDescriptor() {
        return {
            milliseconds: this.milliseconds,
            actionCode: this.actionCode,
        };
    }
    static fromYaml(_stepName, stepArgs) {
        const step = new WaitStep(WaitStep.stepName, [stepArgs.milliseconds], []);
        step.setStepId(stepArgs.id);
        return step;
    }
    toMablscript() {
        return `wait(${this.milliseconds})`;
    }
    static validateWait(wait) {
        if (typeof wait !== 'number') {
            throw new Error(`Invalid wait argument [${wait}]`);
        }
        return wait;
    }
}
exports.WaitStep = WaitStep;
WaitStep.stepName = 'Wait';
WaitStep.mablScriptStepNames = ['wait'];
WaitStep.yamlMablScriptNames = [WaitStep.stepName];
