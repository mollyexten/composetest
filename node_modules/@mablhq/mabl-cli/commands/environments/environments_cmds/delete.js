"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mablApiClientFactory_1 = require("../../../api/mablApiClientFactory");
const constants_1 = require("../../constants");
const util_1 = require("../../commandUtil/util");
const chalk_1 = __importDefault(require("chalk"));
const loggingProvider_1 = require("../../../providers/logging/loggingProvider");
exports.command = `delete <${constants_1.CommandArgId}>`;
exports.describe = 'Delete a mabl environment';
exports.builder = (yargs) => {
    yargs.positional(constants_1.CommandArgId, {
        describe: 'Environment id to delete',
        type: 'string',
    });
};
exports.handler = (0, util_1.failWrapper)(deleteEnvironment);
async function deleteEnvironment(parsed) {
    var _a;
    let environment;
    try {
        const apiClient = await mablApiClientFactory_1.MablApiClientFactory.createApiClient();
        environment = await apiClient.deleteEnvironment(parsed.id);
        loggingProvider_1.logger.info(chalk_1.default.green(`Environment ${chalk_1.default.bold((_a = environment.id) !== null && _a !== void 0 ? _a : '')} DELETED`));
    }
    catch (error) {
        throw new Error(`Error deleting environment: ${error}`);
    }
    return environment.id;
}
