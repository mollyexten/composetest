import { AxiosInstance } from 'axios';
import { MablTestResult } from '../MablTestResult';
export type MablPlanRunStatus = 'cancelled' | 'completed' | 'failed' | 'post_execution' | 'pre_execution' | 'queued' | 'scheduled' | 'scheduling' | 'succeeded' | 'terminated';
export type ExecutionSource = 'external' | 'mabl_local';
export declare const MABL_PROD_API_URL = "https://api.mabl.com";
export interface MablApiOptions {
    httpClient: AxiosInstance;
    apiUrl?: string;
    log: (message: string) => void;
    logError: (message: string) => void;
}
export declare class MablApiClient {
    readonly options: MablApiOptions;
    private readonly apiUrl;
    private readonly httpClient;
    private readonly log;
    private readonly logError;
    constructor(options: MablApiOptions);
    createPlanRun(workspaceId: string, planName: string, executionId: string, executionSource: ExecutionSource): Promise<string | undefined>;
    postTestResultToMabl(testResult: MablTestResult, executionSource: ExecutionSource): Promise<string | undefined>;
    setExecutionOutputFile(testId: string, executionOutputFileUri: string): Promise<void>;
    finalizePlanRun(planRunId: string, status: MablPlanRunStatus): Promise<void>;
}
