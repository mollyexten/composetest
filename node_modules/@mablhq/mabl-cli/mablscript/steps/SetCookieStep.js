"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetCookieStep = void 0;
const MablStep_1 = require("../MablStep");
const MablAction_1 = require("../MablAction");
const CookieUtils_1 = require("./CookieUtils");
const domUtil_1 = require("../../domUtil");
class SetCookieStep extends MablStep_1.MablStep {
    constructor(name, args, actions) {
        super(name, args, actions, 'set_cookie');
        const cookieSelector = this.getActionArgs()[0];
        this.cookieName = CookieUtils_1.CookieUtils.normalizeName(cookieSelector.name);
        this.cookieValue = CookieUtils_1.CookieUtils.normalizeValue(cookieSelector.value);
        const cookieOptions = {
            domain: cookieSelector.domain,
            path: cookieSelector.path,
            expires: cookieSelector.expiry,
            httpOnly: cookieSelector.http_only,
            secure: cookieSelector.secure,
            sameSite: cookieSelector.same_site,
            url: cookieSelector.url,
        };
        if (Object.values(cookieOptions).filter((optionValue) => optionValue !== undefined).length > 0) {
            this.cookieOptions = cookieOptions;
        }
    }
    getStepName() {
        return 'SetCookie';
    }
    toStepDescriptor() {
        return {
            name: this.cookieName,
            value: this.cookieValue,
            options: this.cookieOptions,
            actionCode: this.actionCode,
        };
    }
    static fromYaml(_stepName, stepArgs) {
        const step = new SetCookieStep('set_cookie', [stepArgs], []);
        step.setStepId(stepArgs.id);
        return step;
    }
    toMablscript() {
        var _a, _b, _c, _d, _e, _f, _g;
        const cookieSelector = {
            name: this.cookieName,
            value: this.cookieValue,
            domain: (_a = this.cookieOptions) === null || _a === void 0 ? void 0 : _a.domain,
            path: (_b = this.cookieOptions) === null || _b === void 0 ? void 0 : _b.path,
            expiry: (_c = this.cookieOptions) === null || _c === void 0 ? void 0 : _c.expires,
            http_only: (_d = this.cookieOptions) === null || _d === void 0 ? void 0 : _d.httpOnly,
            secure: (_e = this.cookieOptions) === null || _e === void 0 ? void 0 : _e.secure,
            same_site: (_f = this.cookieOptions) === null || _f === void 0 ? void 0 : _f.sameSite,
            url: (_g = this.cookieOptions) === null || _g === void 0 ? void 0 : _g.url,
        };
        return `set_cookie(${(0, domUtil_1.buildStepArgumentString)({
            params: cookieSelector,
            legacy: false,
        })})`;
    }
    getInputVariables() {
        return (0, MablAction_1.distinctStrings)([
            ...MablAction_1.MablAction.findUniqueVariableReferencesInValue(this.cookieName),
            ...MablAction_1.MablAction.findUniqueVariableReferencesInValue(this.cookieValue),
        ]);
    }
}
exports.SetCookieStep = SetCookieStep;
SetCookieStep.mablScriptStepNames = ['set_cookie'];
SetCookieStep.yamlMablScriptNames = ['SetCookie'];
