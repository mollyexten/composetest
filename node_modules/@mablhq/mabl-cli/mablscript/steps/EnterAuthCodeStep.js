"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnterAuthCodeStep = void 0;
const FindAction_1 = require("../actions/FindAction");
const domUtil_1 = require("../../domUtil");
const ActionsUtils_1 = require("./ActionsUtils");
const MablStepWithFindAction_1 = require("../MablStepWithFindAction");
class EnterAuthCodeStep extends MablStepWithFindAction_1.MablStepWithFindAction {
    constructor(name, args, actions) {
        super(name, args, actions, EnterAuthCodeStep.stepName);
        this.findAction = ActionsUtils_1.ActionsUtils.validateSingleFindAction(this.actions);
    }
    getStepName() {
        return 'EnterAuthCode';
    }
    toStepDescriptor() {
        const find = this.findAction.toDescriptor();
        switch (find.findType) {
            case domUtil_1.FindType.FIND_FIRST:
            case domUtil_1.FindType.FIND_LAST:
            case domUtil_1.FindType.FIND_ANY:
            case domUtil_1.FindType.FIND_ONE:
                return {
                    find,
                    descriptorToActionMap: new Map().set(find, this.findAction),
                    actionCode: this.actionCode,
                };
            default:
                throw new Error(`Error generating step descriptor for ${this.getStepName()}: Unexpected find type ${find.findType}`);
        }
    }
    getFormattedStep(_fullLocatorsOn) {
        const step = {
            EnterAuthCode: {
                ...super.annotationsAsYml(),
                ...this.findAction.toYaml(),
            },
        };
        if (this.stepId()) {
            step.EnterAuthCode.id = this.stepId();
        }
        return step;
    }
    static fromYaml(_stepName, stepArgs) {
        const step = new EnterAuthCodeStep(EnterAuthCodeStep.stepName, [], [FindAction_1.FindAction.findActionFromStepArgs(stepArgs)]);
        step.setStepId(stepArgs.id);
        return step;
    }
    toMablscript() {
        return `${this.findAction.toMablscript()}.enter_auth_code()`;
    }
    getInputVariables() {
        return this.findAction.getInputVariables();
    }
}
exports.EnterAuthCodeStep = EnterAuthCodeStep;
EnterAuthCodeStep.stepName = 'enter_auth_code';
EnterAuthCodeStep.mablScriptStepNames = [EnterAuthCodeStep.stepName];
EnterAuthCodeStep.yamlMablScriptNames = ['EnterAuthCode'];
