"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
class RichPromise {
    constructor(chained) {
        this.resolver = () => { };
        this.resolved = false;
        this.rejecter = () => { };
        this.rejected = false;
        this[_a] = 'promise';
        this.promise = new Promise((resolve, reject) => {
            this.resolver = resolve;
            this.rejecter = reject;
        });
        if (chained) {
            chained
                .then((result) => this.resolve(result))
                .catch((reason) => this.reject(reason));
        }
    }
    isPending() {
        return !(this.isResolved() || this.isRejected());
    }
    resolve(value) {
        if (this.isPending()) {
            this.resolver(value);
            this.resolved = true;
        }
    }
    isResolved() {
        return this.resolved;
    }
    reject(reason) {
        if (this.isPending()) {
            this.rejecter(reason);
            this.rejected = true;
        }
    }
    isRejected() {
        return this.rejected;
    }
    then(onfulfilled, onrejected) {
        return this.promise.then(onfulfilled, onrejected);
    }
    catch(onrejected) {
        return this.promise.catch(onrejected);
    }
    finally(onfinally) {
        return this.promise.finally(onfinally);
    }
}
_a = Symbol.toStringTag;
exports.default = RichPromise;
