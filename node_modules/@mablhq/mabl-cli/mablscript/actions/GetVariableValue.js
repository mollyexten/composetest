"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetVariableValue = void 0;
const MablAction_1 = require("../MablAction");
const MablSymbol_1 = require("../MablSymbol");
const GetVariableDescriptor_1 = require("../types/GetVariableDescriptor");
class GetVariableValue extends MablAction_1.MablAction {
    constructor(name, args) {
        super(name, 'get_variable_value', args);
        const arg = this.getActionArgs()[0];
        if (typeof arg !== 'string') {
            throw new Error('Expected string argument');
        }
        this.variable = MablSymbol_1.MablSymbol.fromString(arg);
    }
    toMablscript() {
        return `get_variable_value(${this.subVariable(this.variable.toString())})`;
    }
    toDescriptor() {
        return (0, GetVariableDescriptor_1.newGetVariableDescriptor)(this.variable);
    }
    generateFindMablscript() {
        return `get_variable_value(${this.variable.name})`;
    }
    getInputVariables() {
        return MablAction_1.MablAction.findUniqueVariableReferencesInValue(this.variable);
    }
}
exports.GetVariableValue = GetVariableValue;
GetVariableValue.mablScriptStepNames = ['get_variable_value'];
GetVariableValue.yamlMablScriptNames = ['GetVariableValueAs'];
