"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEditTestPayloadFromCli = exports.isNewTestPayloadFromCli = exports.isEditTestPayloadFromDesktopApp = exports.isNewTestPayloadFromDesktopApp = exports.isEditTestPayloadFromWebApp = exports.isNewTestPayloadFromWebApp = exports.isPayloadFromCli = exports.isPayloadFromUi = void 0;
function isPayloadFromUi(payload) {
    return payload.sender === 'webapp' || payload.sender === 'mabltron';
}
exports.isPayloadFromUi = isPayloadFromUi;
function isPayloadFromCli(payload) {
    return payload.sender === 'cli' || !isPayloadFromUi(payload);
}
exports.isPayloadFromCli = isPayloadFromCli;
function isNewTestPayloadFromWebApp(payload) {
    return payload.sender === 'webapp' && payload.testId === undefined;
}
exports.isNewTestPayloadFromWebApp = isNewTestPayloadFromWebApp;
function isEditTestPayloadFromWebApp(payload) {
    return payload.sender === 'webapp' && payload.testId !== undefined;
}
exports.isEditTestPayloadFromWebApp = isEditTestPayloadFromWebApp;
function isNewTestPayloadFromDesktopApp(payload) {
    return payload.sender === 'mabltron' && payload.testId === undefined;
}
exports.isNewTestPayloadFromDesktopApp = isNewTestPayloadFromDesktopApp;
function isEditTestPayloadFromDesktopApp(payload) {
    return payload.sender === 'mabltron' && payload.testId !== undefined;
}
exports.isEditTestPayloadFromDesktopApp = isEditTestPayloadFromDesktopApp;
function isNewTestPayloadFromCli(payload) {
    return isPayloadFromCli(payload) && payload.testName !== undefined;
}
exports.isNewTestPayloadFromCli = isNewTestPayloadFromCli;
function isEditTestPayloadFromCli(payload) {
    return isPayloadFromCli(payload) && payload.testId !== undefined;
}
exports.isEditTestPayloadFromCli = isEditTestPayloadFromCli;
