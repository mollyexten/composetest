"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDriver = exports.getSessionInfo = exports.setSessionInfo = exports.initializeDriverInPage = void 0;
const web2driver_1 = require("web2driver");
let MABL_SESSION_CONFIG;
let MABL_APPIUM_DRIVER;
async function initializeDriverInPage(config) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const driver = await web2driver_1.Web2Driver.attachToSession(config.sessionId, {
        protocol: (_a = config.protocol) !== null && _a !== void 0 ? _a : 'http',
        hostname: (_b = config.hostname) !== null && _b !== void 0 ? _b : 'localhost',
        port: (_c = config.port) !== null && _c !== void 0 ? _c : 4723,
        path: (_d = config.path) !== null && _d !== void 0 ? _d : '/',
        isMobile: (_e = config.isMobile) !== null && _e !== void 0 ? _e : false,
        isAndroid: (_f = config.isAndroid) !== null && _f !== void 0 ? _f : false,
        isIOS: (_g = config.isIOS) !== null && _g !== void 0 ? _g : false,
    }, config.capabilities, (_h = config.isW3C) !== null && _h !== void 0 ? _h : true);
    return driver;
}
exports.initializeDriverInPage = initializeDriverInPage;
function setSessionInfo(config) {
    MABL_SESSION_CONFIG = config;
}
exports.setSessionInfo = setSessionInfo;
function getSessionInfo() {
    return MABL_SESSION_CONFIG;
}
exports.getSessionInfo = getSessionInfo;
async function getDriver() {
    if (!MABL_APPIUM_DRIVER) {
        MABL_APPIUM_DRIVER = (await initializeDriverInPage(MABL_SESSION_CONFIG));
    }
    return MABL_APPIUM_DRIVER;
}
exports.getDriver = getDriver;
window.mabl = {
    mobile: {
        initializeDriverInPage,
        setSessionInfo,
        getSessionInfo,
        getDriver,
    },
    ...window._mabl,
};
