/// <reference types="node" />
import { UploadClient } from '@mablhq/upload-service-client-nodejs';
import { ExecutionSource, MablApiClient } from './MablApiClient';
import { MablExecutionOutput, MablExecutionOutputStatus, MablExecutionStep, MablTestResult } from '../MablTestResult';
import { MablPlanRunStatus } from './MablApiClient';
export interface MablReporterOptions {
    apiClient: MablApiClient;
    uploadClient: UploadClient;
    planName?: string;
    log: (message: string) => void;
    logError: (message: string) => void;
    workspaceId: string;
    executionId?: string;
    context: ExecutionSource;
}
export declare class MablReporter {
    readonly options: MablReporterOptions;
    private logCounter;
    private screenshotCounter;
    readonly apiClient: MablApiClient;
    readonly uploadClient: UploadClient;
    readonly planName?: string;
    readonly log: (message: string) => void;
    readonly logError: (message: string) => void;
    readonly workspaceId: string;
    readonly executionId?: string;
    readonly executionSource: ExecutionSource;
    constructor(options: MablReporterOptions);
    createPlanRunToMabl(): Promise<string | undefined>;
    createTestResult(testResult: MablTestResult, screenshotFile: string | undefined, steps: MablExecutionStep[], status: MablExecutionOutputStatus): Promise<void>;
    finalizePlanRun(planRunId: string, status: MablPlanRunStatus): Promise<void>;
    mapTestResultToExecutionOutput(status: MablExecutionOutputStatus, steps: MablExecutionStep[], traceFile?: string, screenshotFile?: string): Promise<MablExecutionOutput>;
    uploadStepLogContent(testId: string, logContent: string): Promise<string | undefined>;
    uploadStepScreenshotContent(testId: string, screenshot: Buffer): Promise<string | undefined>;
}
