#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const yargs = __importStar(require("yargs"));
const env_1 = require("./env/env");
const constants_1 = require("./commands/constants");
const middleware_1 = require("./middleware");
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
require('yargonaut').style('cyan').helpStyle('magenta').errorsStyle('red');
const hasInternalDirectory = fs_1.default.existsSync(path_1.default.resolve(__dirname, 'commands', 'internal', 'internal_cmds'));
const excludeInternal = !hasInternalDirectory ? { exclude: /.*/gm } : undefined;
yargs
    .scriptName(env_1.SCRIPT_NAME)
    .commandDir('./commands/applications')
    .commandDir('./commands/auth')
    .commandDir('./commands/branches')
    .commandDir('./commands/config')
    .commandDir('./commands/credentials')
    .commandDir('./commands/databases')
    .commandDir('./commands/datatables')
    .commandDir('./commands/deploy')
    .commandDir('./commands/environments')
    .commandDir('./commands/flows')
    .commandDir('./commands/internal', excludeInternal)
    .commandDir('./commands/link-agents')
    .commandDir('./commands/mobile-build-files')
    .commandDir('./commands/plans')
    .commandDir('./commands/tests')
    .commandDir('./commands/test-runs')
    .commandDir('./commands/users')
    .commandDir('./commands/workspaces')
    .demandCommand(1, '')
    .recommendCommands()
    .strict()
    .help(constants_1.CommandArgHelp)
    .alias(constants_1.CommandArgHelp, constants_1.CommandArgAliases.ShowHelp)
    .alias(constants_1.CommandArgVersion, constants_1.CommandArgAliases.Version)
    .wrap(null)
    .epilogue('Read full docs @ https://help.mabl.com/docs/mabl-cli')
    .middleware(middleware_1.CLI_MIDDLEWARE).argv;
