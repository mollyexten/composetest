"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDatabaseQueryStep = exports.DatabaseQueryVariableSource = exports.DatabaseQueryStep = void 0;
const AbstractAssertionsAndVariablesStep_1 = require("./AbstractAssertionsAndVariablesStep");
class DatabaseQueryStep extends AbstractAssertionsAndVariablesStep_1.AbstractAssertionsAndVariablesStep {
    constructor(name, args, actions) {
        super(name, args, actions, DatabaseQueryStep.mablScriptStepNames[0], DatabaseQueryStep.stepName, args[0]);
    }
    static fromYaml(_stepName, stepArgs) {
        const formatted = stepArgs;
        const step = new DatabaseQueryStep(DatabaseQueryStep.stepName, [formatted], []);
        step.setStepId(stepArgs.id);
        return step;
    }
}
exports.DatabaseQueryStep = DatabaseQueryStep;
DatabaseQueryStep.stepName = 'DatabaseQuery';
DatabaseQueryStep.mablScriptStepNames = ['database_query'];
DatabaseQueryStep.yamlMablScriptNames = [DatabaseQueryStep.stepName];
var DatabaseQueryVariableSource;
(function (DatabaseQueryVariableSource) {
    DatabaseQueryVariableSource["Metadata"] = "metadata";
    DatabaseQueryVariableSource["Result"] = "result";
})(DatabaseQueryVariableSource || (exports.DatabaseQueryVariableSource = DatabaseQueryVariableSource = {}));
function isDatabaseQueryStep(step) {
    return step.getStepName() === DatabaseQueryStep.stepName;
}
exports.isDatabaseQueryStep = isDatabaseQueryStep;
