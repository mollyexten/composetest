"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtractAction = exports.ExtractTypeName = exports.CSS_EXTRACTION_VALUE = exports.EXTRACTION_TYPE_KEY = void 0;
const MablAction_1 = require("../MablAction");
const ExtractDescriptor_1 = require("../types/ExtractDescriptor");
exports.EXTRACTION_TYPE_KEY = 'extraction_type';
exports.CSS_EXTRACTION_VALUE = 'css';
var ExtractTypeName;
(function (ExtractTypeName) {
    ExtractTypeName["CssProperty"] = "CssProperty";
    ExtractTypeName["ElementAttribute"] = "ElementAttribute";
    ExtractTypeName["EmailAttribute"] = "EmailAttribute";
})(ExtractTypeName || (exports.ExtractTypeName = ExtractTypeName = {}));
class ExtractAction extends MablAction_1.MablAction {
    constructor(name, args) {
        super(name, name, args);
        if (this.name === ExtractDescriptor_1.ExtractType.EXTRACT_INNER_TEXT) {
            this.name = ExtractDescriptor_1.ExtractType.EXTRACT_ATTRIBUTE;
            this.extractionAttribute = 'innerText';
        }
        else {
            this.extractionAttribute = this.getActionArgs()[0];
        }
        if (this.name === ExtractDescriptor_1.ExtractType.EXTRACT_ATTRIBUTE && this.args.length > 1) {
            const extractionOptions = this.args[1];
            const metaExtractionType = extractionOptions.extraction_type;
            if ((metaExtractionType === null || metaExtractionType === void 0 ? void 0 : metaExtractionType.toLowerCase()) === exports.CSS_EXTRACTION_VALUE) {
                this.extractionType = ExtractDescriptor_1.ExtractType.EXTRACT_CSS_PROPERTIES.toString();
            }
            else {
                this.extractionType = this.name;
            }
        }
        else {
            this.extractionType = this.name;
        }
        this.extractDescriptor = this.getExtractDescriptor();
    }
    getExtractDescriptor() {
        if (!this.extractionAttribute) {
            throw new Error(`Attribute name is required for extract attribute action.`);
        }
        if (typeof this.extractionAttribute !== 'string') {
            throw new Error(`Invalid attribute provided for extract attribute extractor: ${this.extractionAttribute}`);
        }
        return {
            extractType: ExtractDescriptor_1.ExtractType.fromString(this.extractionType),
            attributeName: this.extractionAttribute,
        };
    }
    toMablscript() {
        if (this.extractionType === ExtractDescriptor_1.ExtractType.EXTRACT_CSS_PROPERTIES) {
            return `extract_attribute("${this.extractionAttribute}", {${exports.EXTRACTION_TYPE_KEY}: "${exports.CSS_EXTRACTION_VALUE}"})`;
        }
        return `${this.extractionType}("${this.extractionAttribute}")`;
    }
    static mablScriptTypeFromYamlType(yamlType) {
        return (Object.keys(ExtractAction.mablscriptToYamlType).find((key) => ExtractAction.mablscriptToYamlType[key] === yamlType) || 'extract_attribute');
    }
}
exports.ExtractAction = ExtractAction;
ExtractAction.mablScriptStepNames = [
    'extract_attribute',
    'extract_email_attribute',
    'extract_inner_text',
];
ExtractAction.mablscriptToYamlType = {
    extract_attribute: ExtractTypeName.ElementAttribute,
    extract_css_property: ExtractTypeName.CssProperty,
    extract_email_attribute: ExtractTypeName.EmailAttribute,
};
